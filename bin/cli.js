#!/usr/bin/env node
"use strict";var _require$1=require("colors"),green=_require$1.green,red=_require$1.red,cyan$1=_require$1.cyan,bold=_require$1.bold,log=function(r){return process.stderr.write(r+"\n")},msg=function(r,e){return log(bold("{"+green(r)+"}")+" "+e)},err=function(r,e){return log(bold("{"+red(r)+"}")+" "+e)},default_perform=function(){err("syn","`perform` is meant for composing tasks. specify tasks you want to run on the command line."),process.exit()},requests=process.argv.slice(2);requests.includes("-v")&&(log("synthesizer@"+require("./package.json").version),process.exit());var _require=require("colors"),cyan=_require.cyan,magenta=_require.magenta,_require2=require("path"),join=_require2.join,_require3=require("fs"),exists=_require3.existsSync,cwd=process.cwd(),synfile=join(cwd,"syn.js");msg("syn","starting in "+cyan(cwd)),exists(synfile)||(err("syn","syn.js not found"),process.exit());var tasks=new Map,_run_task=default_perform;global.__synthesizer__tasks__=tasks,global.__synthesizer__perform__=function(){for(var r=arguments.length,e=Array(r),s=0;s<r;s++)e[s]=arguments[s];e.forEach(_run_task)},require(synfile),msg("syn","using "+cyan(synfile));var task_stack=[];tasks.set("#",requests),_run_task=function(r){if(msg(":"+r,"init"),task_stack.push(r),!tasks.has(r))throw new Error("task "+r+" not found");for(var e=tasks.get(r),s=0;s<e.length;s++){var n=e[s];n.constructor===String?_run_task(n):n()}task_stack.pop(),msg(":"+r,"done")};try{_run_task("#")}catch(r){log(magenta(r.stack));for(var i=task_stack.length-1;i>=0;i--)err(":"+task_stack[i],"fail")}
